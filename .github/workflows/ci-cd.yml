name: CI-CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  build-and-test:
    name: "Build & Test all microservices"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        service:
          - airport-boarding-service
          - airport-bookings-service
          - airport-checkin-service
          - airport-checking-service
          - airport-flight-service
          - airport-pilot-service
          - api-gateway
          - eureka-server

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'        # ускоряет maven

      - name: Maven test & package
        working-directory: ${{ matrix.service }}
        run: mvn -B -q clean test package

      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ matrix.service }}
          SERVICE_DIR=./${{ matrix.service }}

          if [ -f "$SERVICE_DIR/Dockerfile" ]; then
            docker build \
              -t $IMAGE_NAME:ci-${{ github.sha }} \
              $SERVICE_DIR
          else
            echo "No Dockerfile in $SERVICE_DIR, skipping docker build for this service."
          fi

      - name: Log in to GHCR
        if: github.ref == 'refs/heads/main'
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GHCR
        if: github.ref == 'refs/heads/main'
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=${{ matrix.service }}
          SERVICE_DIR=./${{ matrix.service }}

          if [ -f "$SERVICE_DIR/Dockerfile" ]; then
            docker tag $IMAGE_NAME:ci-${{ github.sha }} ghcr.io/$OWNER/$IMAGE_NAME:${{ github.sha }}
            docker push ghcr.io/$OWNER/$IMAGE_NAME:${{ github.sha }}
          else
            echo "No Dockerfile in $SERVICE_DIR, skipping push for this service."
          fi
